version: 1
project: Udaan Sarathi — Recruitment Portal
workspace_path: /Users/ajaydahal/v6/portal_web/UdaanSarathi
spec_date: 2025-09-05T22:08:22+05:45
review_by: 2025-09-06T10:00:00+05:45
sprint_window:
  start: 2025-09-06T10:00:00+05:45
  end: 2025-09-13T18:00:00+05:45
scope:
  in:
    - Authentication (login, RBAC, sessions)
    - Jobs management (list/detail/search/filter/pagination/status)
    - Applications tracking (stages, documents)
    - Shortlisting + bulk reject + ranking
    - Interview scheduling (manual/batch, calendar)
    - Drafts + Publish workflow
    - Post-interview Workflow
    - Audit Log (Admin)
    - Agency Settings
    - Analytics dashboard
  out:
    - Backend API integration (mock data only in this workspace)
    - Payments or billing
    - External SMS gateway integration beyond mocks
exclusions_acknowledged:
  - This spec focuses on frontend behavior against mock data under `src/data/`.
  - Any production API behavior must define contracts first.
references:
  - README.md
  - MVP_IMPLEMENTATION_STATUS.md
  - INFORMATION_ARCHITECTURE_CHANGES.md
  - DEPLOYMENT_CHECKLIST.md

use_cases:
  - id: UC-001-LOGIN
    title: User logs in
    actors: [User]
    preconditions:
      - User has valid demo credentials from `sep3.md`.
    triggers:
      - User navigates to `/login`.
    main_flow:
      - Enter username and password.
      - Click Login.
      - System authenticates via `src/services/authService.js`.
      - Establish session; route to Dashboard.
    alternative_flows:
      - Invalid credentials → error message; remain on Login.
    exceptions:
      - Network error → show retry with `useErrorHandler`.
    data:
      - username, password (mocked)
    success_criteria:
      - Redirect to `/dashboard` with role-based nav.
    metrics:
      - login_success_rate >= 95%
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-06T10:00:00+05:45

  - id: UC-002-RBAC-NAV
    title: Navigation reflects role permissions
    actors: [Admin, Recruiter, Coordinator]
    preconditions:
      - User is authenticated.
    triggers:
      - App shell renders `Layout.jsx`.
    main_flow:
      - "`AuthContext` exposes `hasPermission`."
      - "`Layout.jsx` filters `navItems` per `INFORMATION_ARCHITECTURE_CHANGES.md`."
    success_criteria:
      - Audit Log visible only to Admin.
    metrics:
      - zero permission leakage in QA tests
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-07T12:00:00+05:45

  - id: UC-003-JOBS-BROWSE
    title: Browse/search jobs
    actors: [Recruiter]
    preconditions:
      - Jobs present in `src/data/jobs.json`.
    triggers:
      - Navigate to `/jobs`.
    main_flow:
      - List renders with pagination, filters, and sort.
      - Search by title/company/location/status/date.
    success_criteria:
      - Filter + search update list without errors.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-08T12:00:00+05:45

  - id: UC-004-JOB-DETAIL
    title: View job details and tabs
    actors: [Recruiter]
    preconditions:
      - Job exists.
    triggers:
      - Click on job from list.
    main_flow:
      - "`JobDetails.jsx` shows tabs: Applied/Shortlisted/Scheduled."
      - Candidate lists load from `applications.json`.
    success_criteria:
      - Tabs switch without errors; counts match mock data.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-08T12:00:00+05:45

  - id: UC-005-SHORTLIST
    title: Shortlist candidates and bulk reject
    actors: [Recruiter]
    triggers:
      - Open shortlist page or component.
    main_flow:
      - Rank via `candidateRankingService.js`.
      - Perform bulk operations.
    success_criteria:
      - Bulk reject updates UI state; ranking visible.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-09T12:00:00+05:45

  - id: UC-006-INTERVIEWS
    title: Schedule interviews (manual + batch)
    actors: [Recruiter, Coordinator]
    triggers:
      - Navigate to `/interviews`.
    main_flow:
      - Use `EnhancedInterviewScheduling.jsx` with calendar.
      - Create manual or batch schedules.
    success_criteria:
      - Events render in `InterviewCalendarView.jsx`.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-10T12:00:00+05:45

  - id: UC-007-DRAFTS-PUBLISH
    title: Manage drafts and publish
    actors: [Recruiter]
    triggers:
      - Navigate to `/drafts` and `/workflow`.
    main_flow:
      - Create/edit drafts.
      - Use workflow stepper to publish.
    success_criteria:
      - Draft state transitions render correctly.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-10T12:00:00+05:45

  - id: UC-008-AUDIT-LOG
    title: View audit log (Admin)
    actors: [Admin]
    triggers:
      - Navigate to `/auditlog`.
    main_flow:
      - Admin sees logs with filters.
    success_criteria:
      - Access blocked for non-admin roles.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-09T12:00:00+05:45

  - id: UC-009-SETTINGS
    title: Manage agency settings
    actors: [Admin]
    triggers:
      - Navigate to Settings.
    main_flow:
      - Update profile, users, permissions.
    success_criteria:
      - Changes persist in UI state; permission guards respected.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-11T12:00:00+05:45

  - id: UC-010-ANALYTICS
    title: View analytics dashboard
    actors: [Admin, Recruiter, Coordinator]
    triggers:
      - Navigate to Dashboard.
    main_flow:
      - Metrics render from `analytics.json`.
    success_criteria:
      - Nepal timezone rendering is correct.
    dates:
      defined: 2025-09-05T22:08:22+05:45
      validate_by: 2025-09-08T12:00:00+05:45

  - id: UC-011-JOB-DRAFT-CREATE
    title: Create single and bulk job drafts, then publish
    actors: [Recruiter]
    preconditions:
      - User has `publish_job` permission.
    triggers:
      - Recruiter navigates to Drafts or Jobs New.
    main_flow:
      - Call `jobService.createDraftJob` with job metadata.
      - Optionally call `jobService.createBulkDraftJobs` for CSV-like batch.
      - Review drafts via `jobService.getDraftJobs`.
      - Publish with `jobService.publishJob`.
    success_criteria:
      - Drafts appear with DRAFT status then transition to PUBLISHED with timestamp.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-09T12:00:00+05:45

  - id: UC-012-JOB-STATUS-TRANSITIONS
    title: Pause, close, and re-open jobs
    actors: [Recruiter]
    preconditions:
      - Job exists.
    main_flow:
      - Pause job via `jobService.pauseJob`.
      - Close job via `jobService.closeJob`.
      - Publish job via `jobService.publishJob` (re-open flow).
    success_criteria:
      - Status changes reflect immediately; filtered lists honor status.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-09T12:00:00+05:45

  - id: UC-013-APPLICATION-STAGE-TRANSITIONS
    title: Transition applications through shortlist, reject, and select
    actors: [Recruiter]
    preconditions:
      - Application exists.
    main_flow:
      - Shortlist via `applicationService.shortlistApplication`.
      - Reject via `applicationService.rejectApplication` with reason.
      - Select via `applicationService.selectApplication`.
    success_criteria:
      - Timestamps set correctly per stage; conversion shows in analytics.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-08T18:00:00+05:45

  - id: UC-014-APPLICATION-BULK-STAGE
    title: Bulk stage update for applications (optimized)
    actors: [Recruiter]
    main_flow:
      - Invoke `applicationService.bulkUpdateStageOptimized` with IDs and target stage.
    success_criteria:
      - All selected apps updated; performance metadata emitted.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-10T12:00:00+05:45

  - id: UC-015-APPLICATION-DOCUMENTS
    title: Attach documents to candidate application
    actors: [Coordinator, Recruiter]
    preconditions:
      - Candidate application exists.
    main_flow:
      - Use `applicationService.attachDocument(candidateId, document)`.
    success_criteria:
      - Document appears with `uploaded_at` stamp; visible in UI.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-10T12:00:00+05:45

  - id: UC-016-INTERVIEW-SAFE-SCHEDULE
    title: Schedule interview with double-booking prevention
    actors: [Recruiter, Coordinator]
    main_flow:
      - Call `interviewService.scheduleInterviewSafe`.
      - If conflict, system surfaces earliest conflicting slot from `checkDoubleBooking`.
    success_criteria:
      - No overlapping interviews for the same candidate; conflict message shown when applicable.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-10T12:00:00+05:45

  - id: UC-017-INTERVIEW-LIFECYCLE
    title: Reschedule, cancel, complete, and mark no-show
    actors: [Recruiter, Coordinator]
    main_flow:
      - Reschedule via `rescheduleInterview`.
      - Cancel via `cancelInterview` with reason.
      - Complete with feedback/score via `completeInterview`.
      - Mark no-show via `markAsNoShow`.
    success_criteria:
      - Status and timestamps update; candidate stage updated on completion.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-10T18:00:00+05:45

  - id: UC-018-CALENDAR-VIEW
    title: Render interview calendar events
    actors: [Coordinator]
    main_flow:
      - Call `interviewService.getCalendarEvents(start, end)`.
      - Render `title`, `start`, `end`, and `extendedProps` in calendar component.
    success_criteria:
      - Events correspond to interview data and candidate/job labels.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-09T18:00:00+05:45

  - id: UC-019-WORKFLOW-NEXT-STAGE
    title: Move workflow to next stage with progress calculation
    actors: [Recruiter, Coordinator]
    preconditions:
      - Workflow exists for candidate.
    main_flow:
      - Use `workflowService.moveToNextStage` which updates timeline and `progress`.
    success_criteria:
      - Progress reflects stage order; timeline updated with pending/current markers.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-11T12:00:00+05:45

  - id: UC-020-WORKFLOW-DOCUMENTS
    title: Receive required workflow document
    actors: [Coordinator]
    main_flow:
      - Call `workflowService.addDocument(workflowId, { name, file_url })`.
    success_criteria:
      - Document status becomes `received` with `received_at` timestamp.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-11T12:00:00+05:45

  - id: UC-021-DEPLOYMENT-SCHEDULE
    title: Manage deployment schedule entries
    actors: [Coordinator]
    main_flow:
      - Create entry via `workflowService.scheduleDeployment`.
      - Update entry via `workflowService.updateDeployment`.
      - Filter month via `workflowService.getDeploymentSchedule({ month })`.
    success_criteria:
      - Entries visible and filterable by month and status.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-12T12:00:00+05:45

  - id: UC-022-ATTENTION-QUEUE
    title: Surface workflows requiring attention
    actors: [Recruiter, Coordinator]
    main_flow:
      - Call `workflowService.getWorkflowsRequiringAttention`.
    success_criteria:
      - Overdue/stale/missing-doc workflows listed with reasons.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-12T12:00:00+05:45

  - id: UC-023-ANALYTICS-KPIS
    title: Validate KPI and real-time metrics
    actors: [Admin]
    main_flow:
      - Retrieve via `analyticsService.getKPIs` and `getRealTimeMetrics`.
    success_criteria:
      - KPIs computed; real-time counts align with services data.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-08T18:00:00+05:45

  - id: UC-024-SEARCH-ADVANCED
    title: Advanced fuzzy/exact/partial search with pagination
    actors: [Recruiter]
    preconditions:
      - Search index created for dataset via `SearchService.createSearchIndex`.
    main_flow:
      - Execute `searchService.search(indexName, query, { pagination, sort, filters })`.
    success_criteria:
      - Returns results with strategy, suggestions, and pagination metadata.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-09T12:00:00+05:45

  - id: UC-025-AUDIT-AGENCY-UPDATES
    title: Log audit entries on agency profile/social/media updates
    actors: [Admin]
    main_flow:
      - Perform updates via `agencyService.update*` methods with `auditInfo.user`.
      - Verify logs via `auditService.getAuditLogs` and `formatAuditLog` for display.
    success_criteria:
      - Audit entries include section, change_count, and timestamp.
    dates:
      defined: 2025-09-05T22:31:48+05:45
      validate_by: 2025-09-11T12:00:00+05:45

quality_gates:
  - explicit_dates_required: true
  - error_handling:
      standard: use `useErrorHandler` and `handleServiceError`
      references:
        - src/utils/errorHandler.js
        - src/hooks/useErrorHandler.js
  - accessibility_wcag: AA
  - performance: TTI < 3s on modern hardware

known_risks:
  - Mock data drift from UI expectations.
  - Role permission misconfig might expose Audit Log.

review:
  owner: PM (this repo)
  reviewers: [Lead Dev, QA]
  next_actions_due: 2025-09-06T10:00:00+05:45

backend_mapping:
  generated_at: 2025-09-05T22:52:45+05:45
  notes: |
    Mapping of frontend use cases to backend availability in `src/modules/` (NestJS + TypeORM)
    Status legend: supported | partial | not_implemented | n/a (frontend-only)
  items:
    - id: UC-001-LOGIN
      status: not_implemented
      backend_refs: []
      notes: No auth module/controllers/services in backend; frontend uses mock `authService`.
    - id: UC-002-RBAC-NAV
      status: n/a
      backend_refs: []
      notes: UI concern; permission gating handled on frontend.
    - id: UC-003-JOBS-BROWSE
      status: supported
      backend_refs:
        - src/modules/domain/domain.service.ts: JobPostingService.findAllJobPostings()
        - src/modules/domain/domain.service.ts: JobPostingService.searchJobPostings()
      notes: Supports paging, filters (country/title/salary/currency/employer/agency), ordering by posting_date.
    - id: UC-004-JOB-DETAIL
      status: supported
      backend_refs:
        - src/modules/domain/domain.service.ts: JobPostingService.findJobPostingById()
      notes: Returns relations (contracts, positions, employer, agency, salary conversions).
    - id: UC-005-SHORTLIST
      status: partial
      backend_refs:
        - src/modules/application/application.service.ts: ApplicationService.updateStatus()
      notes: Stage transition to `shortlisted` supported. Ranking service is frontend-only; no backend ranking endpoint.
    - id: UC-006-INTERVIEWS
      status: partial
      backend_refs:
        - src/modules/application/application.service.ts: ApplicationService.scheduleInterview()
        - src/modules/domain/domain.service.ts: InterviewService.createInterview()
      notes: Manual scheduling supported; no bulk scheduling helper.
    - id: UC-007-DRAFTS-PUBLISH
      status: partial
      backend_refs:
        - src/modules/domain/domain.service.ts: JobPostingService.createJobPosting()
        - src/modules/domain/domain.service.ts: JobPostingService.deactivateJobPosting()
      notes: No explicit draft/publish lifecycle; can approximate via `is_active` true/false.
    - id: UC-008-AUDIT-LOG
      status: not_implemented
      backend_refs: []
      notes: No audit module present.
    - id: UC-009-SETTINGS
      status: supported
      backend_refs:
        - src/modules/agency/agency.service.ts: AgencyService.updateAgency()
        - src/modules/agency/agency.service.ts: AgencyService.findAgencyById()/listAgencies()
      notes: Agency profile/settings/activation flows exist.
    - id: UC-010-ANALYTICS
      status: supported
      backend_refs:
        - src/modules/owner-analytics/owner-analytics.service.ts: OwnerAnalyticsService.getPortalOverview()
        - src/modules/agency/agency.service.ts: AgencyService.getAgencyAnalytics()
      notes: Dashboard metrics supported via queries; differs from frontend mock composition.
    - id: UC-011-JOB-DRAFT-CREATE
      status: partial
      backend_refs:
        - src/modules/domain/domain.service.ts: JobPostingService.createJobPosting()
      notes: Create supported; no draft state or bulk CSV create implemented.
    - id: UC-012-JOB-STATUS-TRANSITIONS
      status: partial
      backend_refs:
        - src/modules/domain/domain.service.ts: JobPostingService.deactivateJobPosting()
      notes: Pause/close via `is_active=false`. No explicit re-open helper; could add activate method.
    - id: UC-013-APPLICATION-STAGE-TRANSITIONS
      status: partial
      backend_refs:
        - src/modules/application/application.service.ts: ApplicationService.updateStatus()
      notes: Supports `applied→shortlisted→interview_*→passed/failed/withdrawn`. No `selected` stage.
    - id: UC-014-APPLICATION-BULK-STAGE
      status: not_implemented
      backend_refs: []
      notes: No bulk status update endpoint.
    - id: UC-015-APPLICATION-DOCUMENTS
      status: not_implemented
      backend_refs: []
      notes: JobApplication has no document attachment API in backend.
    - id: UC-016-INTERVIEW-SAFE-SCHEDULE
      status: not_implemented
      backend_refs:
        - src/modules/domain/domain.service.ts: InterviewService.createInterview()
      notes: No double-booking prevention utility present.
    - id: UC-017-INTERVIEW-LIFECYCLE
      status: partial
      backend_refs:
        - src/modules/application/application.service.ts: ApplicationService.rescheduleInterview()
        - src/modules/domain/domain.service.ts: InterviewService.updateInterview()
      notes: Reschedule supported. No explicit cancel/no-show endpoints.
    - id: UC-018-CALENDAR-VIEW
      status: not_implemented
      backend_refs: []
      notes: No calendar events aggregator; can query by date via custom method addition.
    - id: UC-019-WORKFLOW-NEXT-STAGE
      status: not_implemented
      backend_refs: []
      notes: No workflow module; only application and interviews exist.
    - id: UC-020-WORKFLOW-DOCUMENTS
      status: not_implemented
      backend_refs: []
      notes: No workflow/documents API.
    - id: UC-021-DEPLOYMENT-SCHEDULE
      status: not_implemented
      backend_refs: []
      notes: No deployment schedule model/service.
    - id: UC-022-ATTENTION-QUEUE
      status: not_implemented
      backend_refs: []
      notes: No attention queue computation for workflows in backend.
    - id: UC-023-ANALYTICS-KPIS
      status: supported
      backend_refs:
        - src/modules/owner-analytics/owner-analytics.service.ts: OwnerAnalyticsService.getPortalOverview()
        - src/modules/owner-analytics/owner-analytics.service.ts: getSalaryStatsByCurrency()/getPositionsDistribution()/getInterviewsTimeSeriesWeekly()
      notes: KPI surface available via analytics services; KPIs differ in naming from frontend.
    - id: UC-024-SEARCH-ADVANCED
      status: partial
      backend_refs:
        - src/modules/domain/domain.service.ts: JobPostingService.searchJobPostings()
      notes: Structured filtering supported; no fuzzy/trigram search in API.
    - id: UC-025-AUDIT-AGENCY-UPDATES
      status: not_implemented
      backend_refs: []
      notes: No audit logging service in backend.
